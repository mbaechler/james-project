Gmail Integration into James

Gmail do that with Gmailify, but it doesn't apply to any IMAP account.

Gmail does synchronization to provide search capabilities, sorting, etc, it's not a backend but rather a bidirectional sync tool.

For James, it makes sense to be able to configure sync processes per user.

It could live outside James process and access James from the outside but it would require talking IMAP or JMAP, non of which is good enough for efficient sync purpose.

Let's consider that the sync process is part of james and uses mailbox-api for now. We could then extract it once mailbox-api would be exposed as REST or RPC.

First, the user will need to define an external account for which it will provide :
- username
- OAuth grant rights

Then, the synchronization process should create a new mailbox tree prefixed with external account email address.

GMail doc as a guide about synchronization process (https://developers.google.com/gmail/api/guides/sync) : basically, one should start by listing + retrieving messages (full sync) and keep the historyId of the state it got.

Then, history.list takes a startHistoryId and returns the list of changes (new messages as well as flag modification, etc). Very helpful for sync purpose.

Google provides Pub/Sub access to Gmail events but it requires a Google Cloud account.

Handling updates with polling looks like an easier integration path.

There are high limits for querying API https://developers.google.com/gmail/api/v1/reference/quota and a Java library provided.

Conflicts : There are always conditions that will lead to conflicts (like modifying flags from several clients). History entries are not providing anything related to time, so we can't use a classic "last change win" strategy. We then should ensure very little delay in event propagation. A way to handle that is to register the sync engine as an Event Listener. Every time a message that belongs to a gmail account is modified, it can issue the right call to Gmail API (and make sure a history call is scheduled).

Tasks summary :
- Manage externals account per user (with OAuth token storage)
- Define an internal process that handles sync (full-sync and incremental sync) with polling and historyId storage
- Propagate James events to GMail
